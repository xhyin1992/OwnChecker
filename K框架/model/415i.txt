<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    8
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_01_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_01_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_01_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_01_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_01_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_01_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_02_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 16 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_02_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        16 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
      </write>
      <timer>
        20
      </timer>
      <indexes>
        #indexes ( 20 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 26 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        26 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 16 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 26 , 28 ) )
      </write>
      <timer>
        29
      </timer>
      <indexes>
        #indexes ( 29 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_02_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_02_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_02_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_02_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_02_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_02_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_03_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 16 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_03_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        16 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
      </write>
      <timer>
        20
      </timer>
      <indexes>
        #indexes ( 20 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 26 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        26 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 16 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 26 , 28 ) )
      </write>
      <timer>
        29
      </timer>
      <indexes>
        #indexes ( 29 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_03_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_03_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_03_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_03_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_03_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_03_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 22 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_04_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        22 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
      </write>
      <timer>
        26
      </timer>
      <indexes>
        #indexes ( 26 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_04_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 32 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        32 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 25 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 34 ) )
      </write>
      <timer>
        35
      </timer>
      <indexes>
        #indexes ( 35 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_04_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_04_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  STATIC_CONST_TRUE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_04_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_04_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  STATIC_CONST_FALSE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  STATIC_CONST_TRUE ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_FALSE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  STATIC_CONST_TRUE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  STATIC_CONST_TRUE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_04_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_04_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 22 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_05_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        22 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
      </write>
      <timer>
        26
      </timer>
      <indexes>
        #indexes ( 26 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_05_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 32 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        32 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 25 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 34 ) )
      </write>
      <timer>
        35
      </timer>
      <indexes>
        #indexes ( 35 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_05_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_05_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticTrue ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  staticTrue ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_05_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_05_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticTrue ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  staticFalse ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticTrue ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  staticTrue ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticFalse ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  staticTrue ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticTrue ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  staticTrue ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_05_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_05_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_06_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_06_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28 )
        ListItem ( data )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_06_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_06_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  STATIC_CONST_FIVE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_06_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_06_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  STATIC_CONST_FIVE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  STATIC_CONST_FIVE ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_FIVE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  STATIC_CONST_FIVE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  STATIC_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  STATIC_CONST_FIVE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_06_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_06_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_07_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20
        staticFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_07_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18
        staticFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30
        staticFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28
        staticFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_07_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_07_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticFive ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  staticFive ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_07_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_07_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticFive ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  staticFive ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticFive ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  staticFive ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticFive ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  staticFive ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  staticFive ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  staticFive ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_07_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_07_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_08_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 16 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_08_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        16 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
      </write>
      <timer>
        20
      </timer>
      <indexes>
        #indexes ( 20 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 26 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        26 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 16 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 26 , 28 ) )
      </write>
      <timer>
        29
      </timer>
      <indexes>
        #indexes ( 29 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_08_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_08_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call staticReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  call staticReturnsTrue ( .Exps ) ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_08_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_08_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call staticReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  call staticReturnsFalse ( .Exps ) ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call staticReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  call staticReturnsTrue ( .Exps ) ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call staticReturnsFalse ( .Exps ) ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  call staticReturnsTrue ( .Exps ) ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call staticReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  call staticReturnsTrue ( .Exps ) ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_08_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_08_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      staticReturnsFalse
    </fname> , <funDef>
      <fname>
        staticReturnsFalse
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      staticReturnsTrue
    </fname> , <funDef>
      <fname>
        staticReturnsTrue
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 22 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_09_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        22 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
      </write>
      <timer>
        26
      </timer>
      <indexes>
        #indexes ( 26 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_09_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 32 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        32 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 25 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 34 ) )
      </write>
      <timer>
        35
      </timer>
      <indexes>
        #indexes ( 35 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_09_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_09_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_TRUE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_09_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_09_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_FALSE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_TRUE ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_FALSE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_TRUE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_TRUE ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_TRUE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_09_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_09_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 22 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_10_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22
        globalFalse |-> 2
        globalTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        22 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 22
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
      </write>
      <timer>
        26
      </timer>
      <indexes>
        #indexes ( 26 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_10_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20
        globalFalse |-> 2
        globalTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 20
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 32 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32
        globalFalse |-> 2
        globalTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        32 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 32
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 25 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 34 ) )
      </write>
      <timer>
        35
      </timer>
      <indexes>
        #indexes ( 35 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30
        globalFalse |-> 2
        globalTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        data |-> 30
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 14 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_10_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_10_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalTrue ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  globalTrue ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_10_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_10_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalTrue ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  globalFalse ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalTrue ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  globalTrue ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalFalse ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  globalTrue ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalTrue ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  globalTrue ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_10_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_10_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_11_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 18 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 16 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_11_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        16 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
      </write>
      <timer>
        20
      </timer>
      <indexes>
        #indexes ( 20 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 26 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        26 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 26 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 16 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 26 , 28 ) )
      </write>
      <timer>
        29
      </timer>
      <indexes>
        #indexes ( 29 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 28 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_11_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_11_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call globalReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  call globalReturnsTrue ( .Exps ) ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_11_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_11_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      globalReturnsFalse
    </fname> , <funDef>
      <fname>
        globalReturnsFalse
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      globalReturnsTrue
    </fname> , <funDef>
      <fname>
        globalReturnsTrue
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call globalReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  call globalReturnsFalse ( .Exps ) ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call globalReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  call globalReturnsTrue ( .Exps ) ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call globalReturnsFalse ( .Exps ) ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  call globalReturnsTrue ( .Exps ) ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call globalReturnsTrue ( .Exps ) ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  call globalReturnsTrue ( .Exps ) ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_11_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_11_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_13_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_13_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28 )
        ListItem ( data )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_13_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_13_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_FIVE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_13_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_13_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_FIVE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_FIVE ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_FIVE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_FIVE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  GLOBAL_CONST_FIVE ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  GLOBAL_CONST_FIVE ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_13_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_13_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #Deallocate ( #loc ( 20 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_14_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20
        globalFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 20
        globalFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        24
      </timer>
      <indexes>
        #indexes ( 24 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        #Deallocate ( #loc ( 18 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B2 ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_14_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18
        globalFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 18
        globalFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #Deallocate ( #loc ( 30 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30
        globalFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 30
        globalFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #Deallocate ( #loc ( 28 ) ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28
        globalFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        data |-> 28
        globalFive |-> 0 )
        ListItem ( data )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 12 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 23 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_14_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_14_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalFive ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  globalFive ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_14_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_14_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G1 ( .Exps ) ;  call goodB2G2 ( .Exps ) ;  call goodG2B1 ( .Exps ) ;  call goodG2B2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalFive ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  globalFive ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalFive ;  @ { transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts } , .Blocks ;  globalFive ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B1
    </fname> , <funDef>
      <fname>
        goodG2B1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalFive ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  globalFive ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B2
    </fname> , <funDef>
      <fname>
        goodG2B2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  globalFive ;  @ { transfer newResource ( .Props ) data ;  .Stmts } , .Blocks ;  globalFive ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_14_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_14_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 22 ) , #loc ( 22 ) ) ~> #increaseIndex ~> #increaseTimer ~> goodG2BStatic ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_21_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14
        badStatic |-> 0
        data |-> 22
        goodB2G1Static |-> 2
        goodB2G2Static |-> 4
        goodG2BStatic |-> 6
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( copy , .Props )
        9 |-> #uninit
        12 |-> #rs ( copy , .Props )
        14 |-> #rs ( .Props )
        18 |-> #rs ( .Props )
        22 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14
        badStatic |-> 0
        data |-> 18
        goodB2G1Static |-> 2
        goodB2G2Static |-> 4
        goodG2BStatic |-> 6 )
        ListItem ( data )
        ListItem ( arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14
        badStatic |-> 0
        goodB2G1Static |-> 2
        goodB2G2Static |-> 4
        goodG2BStatic |-> 6 )
        ListItem ( arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14
        badStatic |-> 0
        goodB2G1Static |-> 2
        goodB2G2Static |-> 4
        goodG2BStatic |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 8
        argv1 |-> 9
        badStatic |-> 0
        goodB2G1Static |-> 2
        goodB2G2Static |-> 4
        goodG2BStatic |-> 6 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( goodG2BStatic )
        ListItem ( goodB2G2Static )
        ListItem ( goodB2G1Static )
        ListItem ( badStatic )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 6 , 21 ) )
        SetItem ( #writev ( 8 , 10 ) )
        SetItem ( #writev ( 9 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_21_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_21_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer newResource ( copy , .Props ) badStatic ;  call badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_21_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_21_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      badSink
    </fname> , <funDef>
      <fname>
        badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { badStatic ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer newResource ( copy , .Props ) goodB2G1Static ;  call goodB2G1Sink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1Sink
    </fname> , <funDef>
      <fname>
        goodB2G1Sink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { goodB2G1Static ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer newResource ( copy , .Props ) goodB2G2Static ;  call goodB2G2Sink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2Sink
    </fname> , <funDef>
      <fname>
        goodB2G2Sink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { goodB2G2Static ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  transfer newResource ( copy , .Props ) goodG2BStatic ;  call goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2BSink
    </fname> , <funDef>
      <fname>
        goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { goodG2BStatic ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_21_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_21_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 22 ) , #loc ( 22 ) ) ~> #increaseIndex ~> #increaseTimer ~> CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_22_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        CWE415_Double_Free__malloc_free_int_22_badGlobal |-> 0
        CWE415_Double_Free__malloc_free_int_22_goodB2G1Global |-> 2
        CWE415_Double_Free__malloc_free_int_22_goodB2G2Global |-> 4
        CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal |-> 6
        arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14
        data |-> 22
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( copy , .Props )
        9 |-> #uninit
        12 |-> #rs ( copy , .Props )
        14 |-> #rs ( .Props )
        18 |-> #rs ( .Props )
        22 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_badGlobal |-> 0
        CWE415_Double_Free__malloc_free_int_22_goodB2G1Global |-> 2
        CWE415_Double_Free__malloc_free_int_22_goodB2G2Global |-> 4
        CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal |-> 6
        arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14
        data |-> 18 )
        ListItem ( data )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_badGlobal |-> 0
        CWE415_Double_Free__malloc_free_int_22_goodB2G1Global |-> 2
        CWE415_Double_Free__malloc_free_int_22_goodB2G2Global |-> 4
        CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal |-> 6
        arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14 )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_badGlobal |-> 0
        CWE415_Double_Free__malloc_free_int_22_goodB2G1Global |-> 2
        CWE415_Double_Free__malloc_free_int_22_goodB2G2Global |-> 4
        CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal |-> 6
        arg1 |-> 8
        argc |-> 12
        argv1 |-> 9
        argv |-> 14 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_badGlobal |-> 0
        CWE415_Double_Free__malloc_free_int_22_goodB2G1Global |-> 2
        CWE415_Double_Free__malloc_free_int_22_goodB2G2Global |-> 4
        CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal |-> 6
        arg1 |-> 8
        argv1 |-> 9 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_goodB2G2Global )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_goodB2G1Global )
        ListItem ( CWE415_Double_Free__malloc_free_int_22_badGlobal )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 6 , 21 ) )
        SetItem ( #writev ( 8 , 10 ) )
        SetItem ( #writev ( 9 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
      </write>
      <timer>
        23
      </timer>
      <indexes>
        #indexes ( 23 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_22_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_22_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer newResource ( copy , .Props ) CWE415_Double_Free__malloc_free_int_22_badGlobal ;  call CWE415_Double_Free__malloc_free_int_22_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_22_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_22_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { CWE415_Double_Free__malloc_free_int_22_badGlobal ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_22_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_22_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_22_goodB2G1Sink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_22_goodB2G1Sink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { CWE415_Double_Free__malloc_free_int_22_goodB2G1Global ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_22_goodB2G2Sink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_22_goodB2G2Sink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { CWE415_Double_Free__malloc_free_int_22_goodB2G2Global ;  @ { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_22_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_22_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal ;  @ { deallocate data ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G1
    </fname> , <funDef>
      <fname>
        goodB2G1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer newResource ( copy , .Props ) CWE415_Double_Free__malloc_free_int_22_goodB2G1Global ;  call CWE415_Double_Free__malloc_free_int_22_goodB2G1Sink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G2
    </fname> , <funDef>
      <fname>
        goodB2G2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer newResource ( copy , .Props ) CWE415_Double_Free__malloc_free_int_22_goodB2G2Global ;  call CWE415_Double_Free__malloc_free_int_22_goodB2G2Sink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  transfer newResource ( copy , .Props ) CWE415_Double_Free__malloc_free_int_22_goodG2BGlobal ;  call CWE415_Double_Free__malloc_free_int_22_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_22_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_22_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 17 ) , #loc ( 20 ) ) ~> #increaseIndex ~> #increaseTimer ~> decl data ;  transfer dataCopy data ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_31_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 17
        dataCopy |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        17 |-> #uninit
        20 |-> #uninit
      </store>
      <stack>
        ListItem ( dataCopy )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 17 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        21
      </timer>
      <indexes>
        #indexes ( 21 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_31_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_31_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  { decl dataCopy ;  transfer data dataCopy ;  decl data ;  transfer dataCopy data ;  deallocate data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_31_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_31_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  { decl dataCopy ;  transfer data dataCopy ;  decl data ;  transfer dataCopy data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  { decl dataCopy ;  transfer data dataCopy ;  decl data ;  transfer dataCopy data ;  deallocate data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_31_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_31_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        dataPtr1 mborrow data ; ~> decl dataPtr2 ;  dataPtr2 borrow data ;  { decl data ;  transfer * dataPtr1 * data ;  transfer newResource ( .Props ) data ;  transfer data * dataPtr1 ;  .Stmts }  { decl data ;  transfer * dataPtr2 * data ;  deallocate data ;  .Stmts }  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_32_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        dataPtr1 |-> 12
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #uninit
        12 |-> #uninit
      </store>
      <stack>
        ListItem ( dataPtr1 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
      </write>
      <timer>
        13
      </timer>
      <indexes>
        #indexes ( 13 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_32_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_32_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  decl dataPtr1 ;  dataPtr1 mborrow data ;  decl dataPtr2 ;  dataPtr2 borrow data ;  { decl data ;  transfer * dataPtr1 * data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data * dataPtr1 ;  .Stmts }  { decl data ;  transfer * dataPtr2 * data ;  deallocate data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_32_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_32_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  decl dataPtr1 ;  dataPtr1 mborrow data ;  decl dataPtr2 ;  dataPtr2 borrow data ;  { decl data ;  transfer * dataPtr1 * data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data * dataPtr1 ;  .Stmts }  { decl data ;  transfer * dataPtr2 * data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  decl dataPtr1 ;  dataPtr1 mborrow data ;  decl dataPtr2 ;  dataPtr2 borrow data ;  { decl data ;  transfer * dataPtr1 * data ;  transfer newResource ( .Props ) data ;  transfer data * dataPtr1 ;  .Stmts }  { decl data ;  transfer * dataPtr2 * data ;  deallocate data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_32_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_32_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 17 ) , #loc ( 18 ) ) ~> #increaseIndex ~> #increaseTimer ~> { decl data ;  transfer myUnion data ;  .Stmts }  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_34_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 17
        myUnion |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        17 |-> #uninit
        18 |-> #uninit
      </store>
      <stack>
        ListItem ( myUnion )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 10 , 13 ) )
        SetItem ( #writev ( 11 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 19 ) )
        SetItem ( #writev ( 17 , 20 ) )
        SetItem ( #writev ( 18 , 21 ) )
      </write>
      <timer>
        21
      </timer>
      <indexes>
        #indexes ( 21 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_34_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_34_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl myUnion ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data myUnion ;  { decl data ;  transfer myUnion data ;  deallocate data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_34_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_34_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl myUnion ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data myUnion ;  { decl data ;  transfer myUnion data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl myUnion ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  transfer data myUnion ;  { decl data ;  transfer myUnion data ;  deallocate data ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_34_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_34_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 13 ) , #loc ( 13 ) ) ~> #increaseIndex ~> #increaseTimer ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_41_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 13
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #uninit
        13 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
      </write>
      <timer>
        14
      </timer>
      <indexes>
        #indexes ( 14 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_41_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_41_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_41_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_41_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G ( .Exps ) ;  call goodG2B ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      badSink
    </fname> , <funDef>
      <fname>
        badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2GSink
    </fname> , <funDef>
      <fname>
        goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  call goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2BSink
    </fname> , <funDef>
      <fname>
        goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_41_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_41_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 12 ) , #loc ( 12 ) ) ~> #increaseIndex ~> #increaseTimer ~> transfer newResource ( .Props ) data ;  deallocate data ;  data ;  val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> transfer newResource ( .Props ) data ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodG2B ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_42_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 12
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #uninit
        12 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
      </write>
      <timer>
        13
      </timer>
      <indexes>
        #indexes ( 13 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_42_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_42_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call badSource ( data , .Exps ) ;  transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_42_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_42_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodB2G ( .Exps ) ;  call goodG2B ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      badSource
    </fname> , <funDef>
      <fname>
        badSource
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { transfer newResource ( .Props ) data ;  deallocate data ;  data ;  val ( newResource ( .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call goodB2GSource ( data , .Exps ) ;  transfer newResource ( .Props ) data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2GSource
    </fname> , <funDef>
      <fname>
        goodB2GSource
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { transfer newResource ( .Props ) data ;  deallocate data ;  data ;  val ( newResource ( .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call goodG2BSource ( data , .Exps ) ;  transfer newResource ( .Props ) data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2BSource
    </fname> , <funDef>
      <fname>
        goodG2BSource
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { transfer newResource ( .Props ) data ;  data ;  val ( newResource ( .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_42_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_42_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 19 ) , #loc ( 2 ) ) ~> #increaseIndex ~> #increaseTimer ~> call goodB2GSink ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_45_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        CWE415_Double_Free__malloc_free_int_45_badData |-> 0
        CWE415_Double_Free__malloc_free_int_45_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_45_goodG2BData |-> 1
        arg1 |-> 3
        argc |-> 7
        argv1 |-> 4
        argv |-> 9
        data |-> 19
      </env>
      <store>
        0 |-> #uninit
        1 |-> #uninit
        2 |-> #uninit
        3 |-> #rs ( copy , .Props )
        4 |-> #uninit
        7 |-> #rs ( copy , .Props )
        9 |-> #rs ( .Props )
        19 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( CWE415_Double_Free__malloc_free_int_45_badData |-> 0
        CWE415_Double_Free__malloc_free_int_45_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_45_goodG2BData |-> 1
        arg1 |-> 3
        argc |-> 7
        argv1 |-> 4
        argv |-> 9 )
        ListItem ( CWE415_Double_Free__malloc_free_int_45_badData |-> 0
        CWE415_Double_Free__malloc_free_int_45_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_45_goodG2BData |-> 1
        arg1 |-> 3
        argc |-> 7
        argv1 |-> 4
        argv |-> 9 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( CWE415_Double_Free__malloc_free_int_45_badData |-> 0
        CWE415_Double_Free__malloc_free_int_45_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_45_goodG2BData |-> 1
        arg1 |-> 3
        argv1 |-> 4 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( CWE415_Double_Free__malloc_free_int_45_goodB2GData )
        ListItem ( CWE415_Double_Free__malloc_free_int_45_goodG2BData )
        ListItem ( CWE415_Double_Free__malloc_free_int_45_badData )
      </stack>
      <write>
        SetItem ( #writev ( 1 , 16 ) )
        SetItem ( #writev ( 2 , 22 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 7 , 8 ) )
        SetItem ( #writev ( 9 , 10 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_45_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_45_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data CWE415_Double_Free__malloc_free_int_45_badData ;  call badSink ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_45_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_45_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      badSink
    </fname> , <funDef>
      <fname>
        badSink
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer CWE415_Double_Free__malloc_free_int_45_badData data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data CWE415_Double_Free__malloc_free_int_45_goodB2GData ;  call goodB2GSink ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2GSink
    </fname> , <funDef>
      <fname>
        goodB2GSink
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer CWE415_Double_Free__malloc_free_int_45_goodB2GData data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  transfer data CWE415_Double_Free__malloc_free_int_45_goodG2BData ;  call goodG2BSink ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2BSink
    </fname> , <funDef>
      <fname>
        goodG2BSink
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer CWE415_Double_Free__malloc_free_int_45_goodG2BData data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_45_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_45_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 13 ) , #loc ( 13 ) ) ~> #increaseIndex ~> #increaseTimer ~> deallocate data ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_51_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 13
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #rs ( .Props )
        13 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
      </write>
      <timer>
        14
      </timer>
      <indexes>
        #indexes ( 14 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_51_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_51_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_51b_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_51_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_51_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_51b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_51b_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_51b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_51b_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_51b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_51b_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_51b_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  call CWE415_Double_Free__malloc_free_int_51b_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_51_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_51_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 13 ) , #loc ( 13 ) ) ~> #increaseIndex ~> #increaseTimer ~> call CWE415_Double_Free__malloc_free_int_52c_goodG2BSink ( data , .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_52_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 13
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #rs ( .Props )
        13 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
      </write>
      <timer>
        14
      </timer>
      <indexes>
        #indexes ( 14 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_52b_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52b_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_52c_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52b_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_52c_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52b_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_52c_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52c_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52c_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52c_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52c_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_52c_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_52c_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_52b_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  call CWE415_Double_Free__malloc_free_int_52b_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_52_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_52_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 13 ) , #loc ( 13 ) ) ~> #increaseIndex ~> #increaseTimer ~> call CWE415_Double_Free__malloc_free_int_53c_goodG2BSink ( data , .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_53_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 13
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #rs ( .Props )
        13 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
      </write>
      <timer>
        14
      </timer>
      <indexes>
        #indexes ( 14 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_53b_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53b_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_53c_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53b_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_53c_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53b_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_53c_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53c_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53c_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_53d_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53c_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53c_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_53d_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53c_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53c_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_53d_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53d_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53d_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53d_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53d_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_53d_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_53d_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_53b_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  call CWE415_Double_Free__malloc_free_int_53b_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_53_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_53_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 13 ) , #loc ( 13 ) ) ~> #increaseIndex ~> #increaseTimer ~> call CWE415_Double_Free__malloc_free_int_54c_goodG2BSink ( data , .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_54_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 13
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #rs ( .Props )
        13 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
      </write>
      <timer>
        14
      </timer>
      <indexes>
        #indexes ( 14 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_54b_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54b_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54c_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54b_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54c_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54b_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54c_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54c_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54c_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54d_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54c_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54c_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54d_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54c_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54c_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54d_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54d_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54d_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54e_badSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54d_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54d_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54e_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54d_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54d_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call CWE415_Double_Free__malloc_free_int_54e_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54e_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54e_badSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54e_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54e_goodB2GSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_54e_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_54e_goodG2BSink
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  call CWE415_Double_Free__malloc_free_int_54b_goodB2GSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  call CWE415_Double_Free__malloc_free_int_54b_goodG2BSink ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_54_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_54_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 16 ) , #loc ( 16 ) ) ~> #increaseIndex ~> #increaseTimer ~> transfer newResource ( .Props ) data ;  deallocate data ;  data ;  val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> deallocate data ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 16
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        14 |-> #uninit
        16 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 14 )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
      </write>
      <timer>
        17
      </timer>
      <indexes>
        #indexes ( 17 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_61_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_61_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call CWE415_Double_Free__malloc_free_int_61b_badSource ( data , .Exps ) ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_61_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_61_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_61b_badSource
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_61b_badSource
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { transfer newResource ( .Props ) data ;  deallocate data ;  data ;  val ( newResource ( .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_61b_goodB2GSource
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_61b_goodB2GSource
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { transfer newResource ( .Props ) data ;  deallocate data ;  data ;  val ( newResource ( .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_61b_goodG2BSource
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_61b_goodG2BSource
      </fname>
      <fparams>
        data : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { transfer newResource ( .Props ) data ;  data ;  val ( newResource ( .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call CWE415_Double_Free__malloc_free_int_61b_goodB2GSource ( data , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  call CWE415_Double_Free__malloc_free_int_61b_goodG2BSource ( data , .Exps ) ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_61_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 15 ) , #loc ( 15 ) ) ~> #increaseIndex ~> #increaseTimer ~> decl data ;  transfer * dataPtr * data ;  deallocate data ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_63_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        dataPtr |-> 15
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #rs ( .Props )
        13 |-> #br ( 14 , 14 , #immRef ( 10 ) )
        15 |-> #uninit
      </store>
      <stack>
        ListItem ( dataPtr )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        dataPtr |-> 13 )
        ListItem ( dataPtr )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 15 , 16 ) )
      </write>
      <timer>
        16
      </timer>
      <indexes>
        #indexes ( 16 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_63_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_63_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  decl dataPtr ;  dataPtr borrow data ;  call CWE415_Double_Free__malloc_free_int_63b_badSink ( dataPtr , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_63_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_63_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_63b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_63b_badSink
      </fname>
      <fparams>
        dataPtr : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer * dataPtr * data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_63b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_63b_goodB2GSink
      </fname>
      <fparams>
        dataPtr : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer * dataPtr * data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_63b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_63b_goodG2BSink
      </fname>
      <fparams>
        dataPtr : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer * dataPtr * data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  decl dataPtr ;  dataPtr borrow data ;  call CWE415_Double_Free__malloc_free_int_63b_goodB2GSink ( dataPtr , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  decl dataPtr ;  dataPtr borrow data ;  call CWE415_Double_Free__malloc_free_int_63b_goodG2BSink ( dataPtr , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_63_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_63_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 15 ) , #loc ( 15 ) ) ~> #increaseIndex ~> #increaseTimer ~> decl dataPtr ;  transfer dataVoidPtr dataPtr ;  decl data ;  transfer * dataPtr * data ;  deallocate data ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_64_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        dataVoidPtr |-> 15
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #rs ( .Props )
        13 |-> #br ( 14 , 14 , #immRef ( 10 ) )
        15 |-> #uninit
      </store>
      <stack>
        ListItem ( dataVoidPtr )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        dataVoidPtr |-> 13 )
        ListItem ( dataVoidPtr )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 15 , 16 ) )
      </write>
      <timer>
        16
      </timer>
      <indexes>
        #indexes ( 16 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_64_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_64_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  decl dataVoidPtr ;  dataVoidPtr borrow data ;  call CWE415_Double_Free__malloc_free_int_64b_badSink ( dataVoidPtr , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_64_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_64_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_64b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_64b_badSink
      </fname>
      <fparams>
        dataVoidPtr : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl dataPtr ;  transfer dataVoidPtr dataPtr ;  decl data ;  transfer * dataPtr * data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_64b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_64b_goodB2GSink
      </fname>
      <fparams>
        dataVoidPtr : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl dataPtr ;  transfer dataVoidPtr dataPtr ;  decl data ;  transfer * dataPtr * data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_64b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_64b_goodG2BSink
      </fname>
      <fparams>
        dataVoidPtr : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl dataPtr ;  transfer dataVoidPtr dataPtr ;  decl data ;  transfer * dataPtr * data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  decl dataVoidPtr ;  dataVoidPtr borrow data ;  call CWE415_Double_Free__malloc_free_int_64b_goodB2GSink ( dataVoidPtr , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  decl dataVoidPtr ;  dataVoidPtr borrow data ;  call CWE415_Double_Free__malloc_free_int_64b_goodG2BSink ( dataVoidPtr , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_64_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_64_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 15 ) , #loc ( 15 ) ) ~> #increaseIndex ~> #increaseTimer ~> decl data ;  transfer dataArray data ;  deallocate data ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_66_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        dataArray |-> 15
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #uninit
        11 |-> #rs ( .Props )
        15 |-> #uninit
      </store>
      <stack>
        ListItem ( dataArray )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        dataArray |-> 11 )
        ListItem ( dataArray )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 10 , 13 ) )
        SetItem ( #writev ( 11 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
      </write>
      <timer>
        16
      </timer>
      <indexes>
        #indexes ( 16 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_66_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_66_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl dataArray ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data dataArray ;  call CWE415_Double_Free__malloc_free_int_66b_badSink ( dataArray , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_66_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_66_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_66b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_66b_badSink
      </fname>
      <fparams>
        dataArray : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer dataArray data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_66b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_66b_goodB2GSink
      </fname>
      <fparams>
        dataArray : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer dataArray data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_66b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_66b_goodG2BSink
      </fname>
      <fparams>
        dataArray : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer dataArray data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl dataArray ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data dataArray ;  call CWE415_Double_Free__malloc_free_int_66b_goodB2GSink ( dataArray , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl dataArray ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  transfer data dataArray ;  call CWE415_Double_Free__malloc_free_int_66b_goodG2BSink ( dataArray , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_66_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_66_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 15 ) , #loc ( 15 ) ) ~> #increaseIndex ~> #increaseTimer ~> decl data ;  transfer myStruct data ;  deallocate data ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call goodB2G ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_67_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        myStruct |-> 15
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        10 |-> #uninit
        11 |-> #rs ( .Props )
        15 |-> #uninit
      </store>
      <stack>
        ListItem ( myStruct )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        data |-> 10
        myStruct |-> 11 )
        ListItem ( myStruct )
        ListItem ( data )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 12 ) )
        SetItem ( #writev ( 10 , 13 ) )
        SetItem ( #writev ( 11 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
      </write>
      <timer>
        16
      </timer>
      <indexes>
        #indexes ( 16 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_67_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_67_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl myStruct ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data myStruct ;  call CWE415_Double_Free__malloc_free_int_67b_badSink ( myStruct , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_67_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_67_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_67b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_67b_badSink
      </fname>
      <fparams>
        myStruct : #own ( copy , .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer myStruct data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_67b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_67b_goodB2GSink
      </fname>
      <fparams>
        myStruct : #own ( copy , .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer myStruct data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_67b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_67b_goodG2BSink
      </fname>
      <fparams>
        myStruct : #own ( copy , .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer myStruct data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl myStruct ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data myStruct ;  call CWE415_Double_Free__malloc_free_int_67b_goodB2GSink ( myStruct , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  decl myStruct ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  transfer data myStruct ;  call CWE415_Double_Free__malloc_free_int_67b_goodG2BSink ( myStruct , .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_67_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_67_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        #TransferV ( #loc ( 19 ) , #loc ( 2 ) ) ~> #increaseIndex ~> #increaseTimer ~> call CWE415_Double_Free__malloc_free_int_68b_goodB2GSink ( .Exps ) ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_68_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        CWE415_Double_Free__malloc_free_int_68_badData |-> 0
        CWE415_Double_Free__malloc_free_int_68_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_68_goodG2BData |-> 1
        arg1 |-> 3
        argc |-> 7
        argv1 |-> 4
        argv |-> 9
        data |-> 19
      </env>
      <store>
        0 |-> #uninit
        1 |-> #uninit
        2 |-> #uninit
        3 |-> #rs ( copy , .Props )
        4 |-> #uninit
        7 |-> #rs ( copy , .Props )
        9 |-> #rs ( .Props )
        19 |-> #uninit
      </store>
      <stack>
        ListItem ( data )
        ListItem ( CWE415_Double_Free__malloc_free_int_68_badData |-> 0
        CWE415_Double_Free__malloc_free_int_68_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_68_goodG2BData |-> 1
        arg1 |-> 3
        argc |-> 7
        argv1 |-> 4
        argv |-> 9 )
        ListItem ( CWE415_Double_Free__malloc_free_int_68_badData |-> 0
        CWE415_Double_Free__malloc_free_int_68_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_68_goodG2BData |-> 1
        arg1 |-> 3
        argc |-> 7
        argv1 |-> 4
        argv |-> 9 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( CWE415_Double_Free__malloc_free_int_68_badData |-> 0
        CWE415_Double_Free__malloc_free_int_68_goodB2GData |-> 2
        CWE415_Double_Free__malloc_free_int_68_goodG2BData |-> 1
        arg1 |-> 3
        argv1 |-> 4 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( CWE415_Double_Free__malloc_free_int_68_goodB2GData )
        ListItem ( CWE415_Double_Free__malloc_free_int_68_goodG2BData )
        ListItem ( CWE415_Double_Free__malloc_free_int_68_badData )
      </stack>
      <write>
        SetItem ( #writev ( 1 , 16 ) )
        SetItem ( #writev ( 2 , 22 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 7 , 8 ) )
        SetItem ( #writev ( 9 , 10 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 13 , 15 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    1
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_68_bad
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_68_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data CWE415_Double_Free__malloc_free_int_68_badData ;  call CWE415_Double_Free__malloc_free_int_68b_badSink ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_68_good
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_68_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call goodG2B ( .Exps ) ;  call goodB2G ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_68b_badSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_68b_badSink
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer CWE415_Double_Free__malloc_free_int_68_badData data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_68b_goodB2GSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_68b_goodB2GSink
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer CWE415_Double_Free__malloc_free_int_68_goodB2GData data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE415_Double_Free__malloc_free_int_68b_goodG2BSink
    </fname> , <funDef>
      <fname>
        CWE415_Double_Free__malloc_free_int_68b_goodG2BSink
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer CWE415_Double_Free__malloc_free_int_68_goodG2BData data ;  deallocate data ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodB2G
    </fname> , <funDef>
      <fname>
        goodB2G
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  deallocate data ;  transfer data CWE415_Double_Free__malloc_free_int_68_goodB2GData ;  call CWE415_Double_Free__malloc_free_int_68b_goodB2GSink ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      goodG2B
    </fname> , <funDef>
      <fname>
        goodG2B
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { decl data ;  transfer #uninit data ;  transfer newResource ( .Props ) data ;  transfer data CWE415_Double_Free__malloc_free_int_68_goodG2BData ;  call CWE415_Double_Free__malloc_free_int_68b_goodG2BSink ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_68_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE415_Double_Free__malloc_free_int_68_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>


real	0m33.313s
user	0m14.076s
sys	0m5.603s

real	0m28.503s
user	0m13.529s
sys	0m5.442s

real	0m29.753s
user	0m13.668s
sys	0m5.765s

real	0m35.991s
user	0m14.501s
sys	0m6.124s

real	0m29.544s
user	0m13.855s
sys	0m5.303s

real	0m32.798s
user	0m13.041s
sys	0m5.832s

real	0m28.809s
user	0m13.659s
sys	0m5.359s

real	0m27.810s
user	0m13.575s
sys	0m5.327s

real	0m36.224s
user	0m14.492s
sys	0m6.159s

real	0m32.718s
user	0m14.533s
sys	0m5.647s

real	0m27.551s
user	0m13.331s
sys	0m5.461s

real	0m30.385s
user	0m13.465s
sys	0m5.693s

real	0m29.414s
user	0m12.747s
sys	0m5.345s

real	1m25.641s
user	0m12.151s
sys	0m5.284s

real	0m18.380s
user	0m13.364s
sys	0m5.364s

real	0m15.487s
user	0m10.942s
sys	0m4.933s

real	0m13.827s
user	0m11.522s
sys	0m4.799s

real	0m14.210s
user	0m11.661s
sys	0m4.879s

real	0m14.617s
user	0m11.308s
sys	0m4.584s

real	0m13.727s
user	0m10.888s
sys	0m4.535s

real	0m15.362s
user	0m11.067s
sys	0m4.669s

real	0m15.002s
user	0m11.102s
sys	0m4.904s

real	0m13.916s
user	0m11.246s
sys	0m4.707s

real	0m14.320s
user	0m11.796s
sys	0m4.719s

real	0m14.179s
user	0m11.168s
sys	0m4.759s

real	0m13.986s
user	0m10.622s
sys	0m4.637s

real	0m13.610s
user	0m10.813s
sys	0m4.558s

real	0m13.701s
user	0m12.049s
sys	0m4.654s

real	0m14.696s
user	0m11.659s
sys	0m4.757s

real	0m13.635s
user	0m11.276s
sys	0m4.590s

real	0m16.154s
user	0m11.051s
sys	0m4.933s

real	12m17.476s
user	6m24.166s
sys	2m39.350s
