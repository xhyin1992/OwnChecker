<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 40 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 35
        aString |-> 33
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 37
        j |-> 39
        reversedString |-> 40
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        32 |-> #uninit
        33 |-> #uninit
        35 |-> #uninit
        37 |-> #rs ( copy , .Props )
        39 |-> #rs ( copy , .Props )
        40 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 35
        aString |-> 33
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 37
        j |-> 39
        reversedString |-> 40 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 33
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 32 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
      </write>
      <timer>
        47
      </timer>
      <indexes>
        #indexes ( 47 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 35 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 30
        aString |-> 28
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 32
        j |-> 34
        reversedString |-> 35
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        27 |-> #uninit
        28 |-> #uninit
        30 |-> #uninit
        32 |-> #rs ( copy , .Props )
        34 |-> #rs ( copy , .Props )
        35 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 30
        aString |-> 28
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 32
        j |-> 34
        reversedString |-> 35 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 28
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 27 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
      </write>
      <timer>
        42
      </timer>
      <indexes>
        #indexes ( 42 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        #TransferV ( #loc ( 32 ) , #loc ( 42 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 33
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 42
        reversedString |-> 32
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        32 |-> #uninit
        33 |-> #uninit
        42 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 33
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 32 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
      </write>
      <timer>
        43
      </timer>
      <indexes>
        #indexes ( 43 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 27 ) , #loc ( 37 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 28
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 37
        reversedString |-> 27
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        27 |-> #uninit
        28 |-> #uninit
        37 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 28
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 27 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
      </write>
      <timer>
        38
      </timer>
      <indexes>
        #indexes ( 38 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    4
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_01_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_01_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_01_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_01_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_01_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_01_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 42 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        37 |-> #uninit
        39 |-> #rs ( copy , .Props )
        41 |-> #rs ( copy , .Props )
        42 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 42 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 42 , 48 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 58 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        53 |-> #uninit
        55 |-> #rs ( copy , .Props )
        57 |-> #rs ( copy , .Props )
        58 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 58 , 61 ) )
        SetItem ( #writev ( 58 , 63 ) )
        SetItem ( #writev ( 58 , 64 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 37 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        32 |-> #uninit
        34 |-> #rs ( copy , .Props )
        36 |-> #rs ( copy , .Props )
        37 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 37 , 43 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 34 ) , #loc ( 44 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 44
        reversedString |-> 34
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 44 , 45 ) )
      </write>
      <timer>
        45
      </timer>
      <indexes>
        #indexes ( 45 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 50 ) , #loc ( 60 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 60
        reversedString |-> 50
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 60 , 61 ) )
      </write>
      <timer>
        61
      </timer>
      <indexes>
        #indexes ( 61 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 29 ) , #loc ( 39 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 39
        reversedString |-> 29
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
      </write>
      <timer>
        40
      </timer>
      <indexes>
        #indexes ( 40 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 48 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        43 |-> #uninit
        45 |-> #rs ( copy , .Props )
        47 |-> #rs ( copy , .Props )
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 40 ) , #loc ( 50 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 50
        reversedString |-> 40
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_02_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_02_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_02_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_02_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_02_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_02_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 42 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        37 |-> #uninit
        39 |-> #rs ( copy , .Props )
        41 |-> #rs ( copy , .Props )
        42 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 42 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 42 , 48 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 58 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        53 |-> #uninit
        55 |-> #rs ( copy , .Props )
        57 |-> #rs ( copy , .Props )
        58 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 58 , 61 ) )
        SetItem ( #writev ( 58 , 63 ) )
        SetItem ( #writev ( 58 , 64 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 37 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        32 |-> #uninit
        34 |-> #rs ( copy , .Props )
        36 |-> #rs ( copy , .Props )
        37 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 37 , 43 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 34 ) , #loc ( 44 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 44
        reversedString |-> 34
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 44 , 45 ) )
      </write>
      <timer>
        45
      </timer>
      <indexes>
        #indexes ( 45 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 50 ) , #loc ( 60 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 60
        reversedString |-> 50
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 60 , 61 ) )
      </write>
      <timer>
        61
      </timer>
      <indexes>
        #indexes ( 61 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 29 ) , #loc ( 39 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 39
        reversedString |-> 29
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
      </write>
      <timer>
        40
      </timer>
      <indexes>
        #indexes ( 40 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 48 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        43 |-> #uninit
        45 |-> #rs ( copy , .Props )
        47 |-> #rs ( copy , .Props )
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 40 ) , #loc ( 50 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 50
        reversedString |-> 40
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_03_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_03_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_03_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_03_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_03_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_03_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 46 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 43
        j |-> 45
        reversedString |-> 46
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        41 |-> #uninit
        43 |-> #rs ( copy , .Props )
        45 |-> #rs ( copy , .Props )
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 43
        j |-> 45
        reversedString |-> 46 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 38 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 46 , 49 ) )
        SetItem ( #writev ( 46 , 51 ) )
        SetItem ( #writev ( 46 , 52 ) )
      </write>
      <timer>
        53
      </timer>
      <indexes>
        #indexes ( 53 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 62 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 59
        j |-> 61
        reversedString |-> 62
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        57 |-> #uninit
        59 |-> #rs ( copy , .Props )
        61 |-> #rs ( copy , .Props )
        62 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 59
        j |-> 61
        reversedString |-> 62 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 54 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 61 , 66 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 62 , 65 ) )
        SetItem ( #writev ( 62 , 67 ) )
        SetItem ( #writev ( 62 , 68 ) )
      </write>
      <timer>
        69
      </timer>
      <indexes>
        #indexes ( 69 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 41 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 38
        j |-> 40
        reversedString |-> 41
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        36 |-> #uninit
        38 |-> #rs ( copy , .Props )
        40 |-> #rs ( copy , .Props )
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 38
        j |-> 40
        reversedString |-> 41 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 33 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 41 , 47 ) )
      </write>
      <timer>
        48
      </timer>
      <indexes>
        #indexes ( 48 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 38 ) , #loc ( 48 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 48
        reversedString |-> 38
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 38 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 54 ) , #loc ( 64 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 64
        reversedString |-> 54
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        64 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 54 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 64 , 65 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 33 ) , #loc ( 43 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 43
        reversedString |-> 33
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        43 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 33 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 52 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 49
        j |-> 51
        reversedString |-> 52
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        47 |-> #uninit
        49 |-> #rs ( copy , .Props )
        51 |-> #rs ( copy , .Props )
        52 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 49
        j |-> 51
        reversedString |-> 52 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 44 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 51 , 56 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 52 , 58 ) )
      </write>
      <timer>
        59
      </timer>
      <indexes>
        #indexes ( 59 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 59
        reversedString |-> 49
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 59
        reversedString |-> 49
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 44 ) , #loc ( 54 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 54
        reversedString |-> 44
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        54 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 44 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FALSE |-> 2
        STATIC_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FALSE )
        ListItem ( STATIC_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_04_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_04_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { STATIC_CONST_TRUE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_04_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_04_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { STATIC_CONST_FALSE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { STATIC_CONST_TRUE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_04_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_04_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 46 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 43
        j |-> 45
        reversedString |-> 46
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        41 |-> #uninit
        43 |-> #rs ( copy , .Props )
        45 |-> #rs ( copy , .Props )
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 43
        j |-> 45
        reversedString |-> 46
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 38
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 46 , 49 ) )
        SetItem ( #writev ( 46 , 51 ) )
        SetItem ( #writev ( 46 , 52 ) )
      </write>
      <timer>
        53
      </timer>
      <indexes>
        #indexes ( 53 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 62 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 59
        j |-> 61
        reversedString |-> 62
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        57 |-> #uninit
        59 |-> #rs ( copy , .Props )
        61 |-> #rs ( copy , .Props )
        62 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 59
        j |-> 61
        reversedString |-> 62
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 54
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 61 , 66 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 62 , 65 ) )
        SetItem ( #writev ( 62 , 67 ) )
        SetItem ( #writev ( 62 , 68 ) )
      </write>
      <timer>
        69
      </timer>
      <indexes>
        #indexes ( 69 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 41 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 38
        j |-> 40
        reversedString |-> 41
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        36 |-> #uninit
        38 |-> #rs ( copy , .Props )
        40 |-> #rs ( copy , .Props )
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 38
        j |-> 40
        reversedString |-> 41
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 33
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 41 , 47 ) )
      </write>
      <timer>
        48
      </timer>
      <indexes>
        #indexes ( 48 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 38 ) , #loc ( 48 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 48
        reversedString |-> 38
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 38
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 54 ) , #loc ( 64 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 64
        reversedString |-> 54
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        64 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 54
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 64 , 65 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 33 ) , #loc ( 43 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 43
        reversedString |-> 33
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        43 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 33
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 52 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 49
        j |-> 51
        reversedString |-> 52
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        47 |-> #uninit
        49 |-> #rs ( copy , .Props )
        51 |-> #rs ( copy , .Props )
        52 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 49
        j |-> 51
        reversedString |-> 52
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 44
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 51 , 56 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 52 , 58 ) )
      </write>
      <timer>
        59
      </timer>
      <indexes>
        #indexes ( 59 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 59
        reversedString |-> 49
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 59
        reversedString |-> 49
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 44 ) , #loc ( 54 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 54
        reversedString |-> 44
        staticFalse |-> 2
        staticTrue |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        54 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 44
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        staticFalse |-> 2
        staticTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFalse )
        ListItem ( staticTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_05_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_05_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { staticTrue ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_05_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_05_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { staticFalse ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { staticTrue ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_05_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_05_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 44 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 41
        j |-> 43
        reversedString |-> 44
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        39 |-> #uninit
        41 |-> #rs ( copy , .Props )
        43 |-> #rs ( copy , .Props )
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 41
        j |-> 43
        reversedString |-> 44 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 36 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 44 , 47 ) )
        SetItem ( #writev ( 44 , 49 ) )
        SetItem ( #writev ( 44 , 50 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 60 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 57
        j |-> 59
        reversedString |-> 60
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        52 |-> #uninit
        53 |-> #uninit
        55 |-> #uninit
        57 |-> #rs ( copy , .Props )
        59 |-> #rs ( copy , .Props )
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 57
        j |-> 59
        reversedString |-> 60 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 52 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 60 , 63 ) )
        SetItem ( #writev ( 60 , 65 ) )
        SetItem ( #writev ( 60 , 66 ) )
      </write>
      <timer>
        67
      </timer>
      <indexes>
        #indexes ( 67 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 39 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 36
        j |-> 38
        reversedString |-> 39
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        34 |-> #uninit
        36 |-> #rs ( copy , .Props )
        38 |-> #rs ( copy , .Props )
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 36
        j |-> 38
        reversedString |-> 39 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 31 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 39 , 45 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        .
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 46 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        .
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 62 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 63 , 64 ) )
        SetItem ( #writev ( 65 , 66 ) )
      </write>
      <timer>
        67
      </timer>
      <indexes>
        #indexes ( 67 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        .
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 41 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 44 , 45 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 50 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 47
        j |-> 49
        reversedString |-> 50
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        42 |-> #uninit
        43 |-> #uninit
        45 |-> #uninit
        47 |-> #rs ( copy , .Props )
        49 |-> #rs ( copy , .Props )
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 47
        j |-> 49
        reversedString |-> 50 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 42 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 53 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 50 , 56 ) )
      </write>
      <timer>
        57
      </timer>
      <indexes>
        #indexes ( 57 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        .
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 57 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 60 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        .
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 57 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 60 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        .
      </k>
      <env>
        STATIC_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( STATIC_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 52 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        57
      </timer>
      <indexes>
        #indexes ( 57 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_06_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_06_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { STATIC_CONST_FIVE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_06_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_06_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { STATIC_CONST_FIVE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { STATIC_CONST_FIVE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_06_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_06_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 44 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 41
        j |-> 43
        reversedString |-> 44
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        39 |-> #uninit
        41 |-> #rs ( copy , .Props )
        43 |-> #rs ( copy , .Props )
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 41
        j |-> 43
        reversedString |-> 44
        staticFive |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 36
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 44 , 47 ) )
        SetItem ( #writev ( 44 , 49 ) )
        SetItem ( #writev ( 44 , 50 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 60 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 57
        j |-> 59
        reversedString |-> 60
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        52 |-> #uninit
        53 |-> #uninit
        55 |-> #uninit
        57 |-> #rs ( copy , .Props )
        59 |-> #rs ( copy , .Props )
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 57
        j |-> 59
        reversedString |-> 60
        staticFive |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 52
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 60 , 63 ) )
        SetItem ( #writev ( 60 , 65 ) )
        SetItem ( #writev ( 60 , 66 ) )
      </write>
      <timer>
        67
      </timer>
      <indexes>
        #indexes ( 67 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 39 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 36
        j |-> 38
        reversedString |-> 39
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        34 |-> #uninit
        36 |-> #rs ( copy , .Props )
        38 |-> #rs ( copy , .Props )
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 36
        j |-> 38
        reversedString |-> 39
        staticFive |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 31
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 39 , 45 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 36 ) , #loc ( 46 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 46
        reversedString |-> 36
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 36
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
      </write>
      <timer>
        47
      </timer>
      <indexes>
        #indexes ( 47 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
        staticFive |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
        staticFive |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 52 ) , #loc ( 62 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 62
        reversedString |-> 52
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        52 |-> #uninit
        53 |-> #uninit
        62 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 52
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 62 , 63 ) )
      </write>
      <timer>
        63
      </timer>
      <indexes>
        #indexes ( 63 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 31 ) , #loc ( 41 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 41
        reversedString |-> 31
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 31
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
      </write>
      <timer>
        42
      </timer>
      <indexes>
        #indexes ( 42 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 50 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 47
        j |-> 49
        reversedString |-> 50
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        42 |-> #uninit
        43 |-> #uninit
        45 |-> #uninit
        47 |-> #rs ( copy , .Props )
        49 |-> #rs ( copy , .Props )
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 47
        j |-> 49
        reversedString |-> 50
        staticFive |-> 0 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 42
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 53 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 50 , 56 ) )
      </write>
      <timer>
        57
      </timer>
      <indexes>
        #indexes ( 57 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 47 ) , #loc ( 57 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 57
        reversedString |-> 47
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
      </write>
      <timer>
        58
      </timer>
      <indexes>
        #indexes ( 58 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 47 ) , #loc ( 57 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 57
        reversedString |-> 47
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
      </write>
      <timer>
        58
      </timer>
      <indexes>
        #indexes ( 58 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 42 ) , #loc ( 52 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 52
        reversedString |-> 42
        staticFive |-> 0
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        42 |-> #uninit
        43 |-> #uninit
        52 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 42
        staticFive |-> 0 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        staticFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        staticFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( staticFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
      </write>
      <timer>
        53
      </timer>
      <indexes>
        #indexes ( 53 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_07_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_07_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { staticFive ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_07_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_07_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { staticFive ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { staticFive ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_07_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_07_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 42 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        37 |-> #uninit
        39 |-> #rs ( copy , .Props )
        41 |-> #rs ( copy , .Props )
        42 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 42 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 42 , 48 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 58 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        53 |-> #uninit
        55 |-> #rs ( copy , .Props )
        57 |-> #rs ( copy , .Props )
        58 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 58 , 61 ) )
        SetItem ( #writev ( 58 , 63 ) )
        SetItem ( #writev ( 58 , 64 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 37 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        32 |-> #uninit
        34 |-> #rs ( copy , .Props )
        36 |-> #rs ( copy , .Props )
        37 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 37 , 43 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 34 ) , #loc ( 44 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 44
        reversedString |-> 34
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 44 , 45 ) )
      </write>
      <timer>
        45
      </timer>
      <indexes>
        #indexes ( 45 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 50 ) , #loc ( 60 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 60
        reversedString |-> 50
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 60 , 61 ) )
      </write>
      <timer>
        61
      </timer>
      <indexes>
        #indexes ( 61 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 29 ) , #loc ( 39 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 39
        reversedString |-> 29
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
      </write>
      <timer>
        40
      </timer>
      <indexes>
        #indexes ( 40 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 48 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        43 |-> #uninit
        45 |-> #rs ( copy , .Props )
        47 |-> #rs ( copy , .Props )
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 40 ) , #loc ( 50 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 50
        reversedString |-> 40
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_08_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_08_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call staticReturnsTrue ( .Exps ) ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_08_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_08_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call staticReturnsFalse ( .Exps ) ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call staticReturnsTrue ( .Exps ) ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_08_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_08_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      staticReturnsFalse
    </fname> , <funDef>
      <fname>
        staticReturnsFalse
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      staticReturnsTrue
    </fname> , <funDef>
      <fname>
        staticReturnsTrue
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 46 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 43
        j |-> 45
        reversedString |-> 46
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        41 |-> #uninit
        43 |-> #rs ( copy , .Props )
        45 |-> #rs ( copy , .Props )
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 43
        j |-> 45
        reversedString |-> 46 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 38 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 46 , 49 ) )
        SetItem ( #writev ( 46 , 51 ) )
        SetItem ( #writev ( 46 , 52 ) )
      </write>
      <timer>
        53
      </timer>
      <indexes>
        #indexes ( 53 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 62 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 59
        j |-> 61
        reversedString |-> 62
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        57 |-> #uninit
        59 |-> #rs ( copy , .Props )
        61 |-> #rs ( copy , .Props )
        62 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 59
        j |-> 61
        reversedString |-> 62 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 54 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 61 , 66 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 62 , 65 ) )
        SetItem ( #writev ( 62 , 67 ) )
        SetItem ( #writev ( 62 , 68 ) )
      </write>
      <timer>
        69
      </timer>
      <indexes>
        #indexes ( 69 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 41 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 38
        j |-> 40
        reversedString |-> 41
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        36 |-> #uninit
        38 |-> #rs ( copy , .Props )
        40 |-> #rs ( copy , .Props )
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 38
        j |-> 40
        reversedString |-> 41 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 33 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 41 , 47 ) )
      </write>
      <timer>
        48
      </timer>
      <indexes>
        #indexes ( 48 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 38 ) , #loc ( 48 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 48
        reversedString |-> 38
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 38 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 54
        j |-> 56
        reversedString |-> 57 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 54 ) , #loc ( 64 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 64
        reversedString |-> 54
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        64 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 54 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 64 , 65 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 33 ) , #loc ( 43 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 43
        reversedString |-> 33
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        43 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 33 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 52 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 49
        j |-> 51
        reversedString |-> 52
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        47 |-> #uninit
        49 |-> #rs ( copy , .Props )
        51 |-> #rs ( copy , .Props )
        52 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        i |-> 49
        j |-> 51
        reversedString |-> 52 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 44 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 51 , 56 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 52 , 58 ) )
      </write>
      <timer>
        59
      </timer>
      <indexes>
        #indexes ( 59 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 59
        reversedString |-> 49
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 59
        reversedString |-> 49
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 44 ) , #loc ( 54 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        line |-> 54
        reversedString |-> 44
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        54 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        reversedString |-> 44 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FALSE |-> 2
        GLOBAL_CONST_TRUE |-> 0
        arg1 |-> 4
        argv1 |-> 5 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FALSE )
        ListItem ( GLOBAL_CONST_TRUE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_09_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_09_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { GLOBAL_CONST_TRUE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_09_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_09_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { GLOBAL_CONST_FALSE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { GLOBAL_CONST_TRUE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_09_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_09_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 46 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 43
        j |-> 45
        reversedString |-> 46
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        41 |-> #uninit
        43 |-> #rs ( copy , .Props )
        45 |-> #rs ( copy , .Props )
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 41
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 43
        j |-> 45
        reversedString |-> 46 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 38 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 46 , 49 ) )
        SetItem ( #writev ( 46 , 51 ) )
        SetItem ( #writev ( 46 , 52 ) )
      </write>
      <timer>
        53
      </timer>
      <indexes>
        #indexes ( 53 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 62 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 59
        j |-> 61
        reversedString |-> 62
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        57 |-> #uninit
        59 |-> #rs ( copy , .Props )
        61 |-> #rs ( copy , .Props )
        62 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 57
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 59
        j |-> 61
        reversedString |-> 62 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 54 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 61 , 66 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 62 , 65 ) )
        SetItem ( #writev ( 62 , 67 ) )
        SetItem ( #writev ( 62 , 68 ) )
      </write>
      <timer>
        69
      </timer>
      <indexes>
        #indexes ( 69 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 41 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 38
        j |-> 40
        reversedString |-> 41
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        36 |-> #uninit
        38 |-> #rs ( copy , .Props )
        40 |-> #rs ( copy , .Props )
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 36
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 38
        j |-> 40
        reversedString |-> 41 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 33 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 41 , 47 ) )
      </write>
      <timer>
        48
      </timer>
      <indexes>
        #indexes ( 48 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 38 ) , #loc ( 48 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        line |-> 48
        reversedString |-> 38
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        38 |-> #uninit
        39 |-> #uninit
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 39
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 38 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 31 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 24 , 27 ) )
        SetItem ( #writev ( 24 , 29 ) )
        SetItem ( #writev ( 24 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 54
        j |-> 56
        reversedString |-> 57
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 54
        j |-> 56
        reversedString |-> 57 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 57 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 54
        j |-> 56
        reversedString |-> 57
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        52 |-> #uninit
        54 |-> #rs ( copy , .Props )
        56 |-> #rs ( copy , .Props )
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 52
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 54
        j |-> 56
        reversedString |-> 57 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 56 , 61 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 57 , 63 ) )
      </write>
      <timer>
        64
      </timer>
      <indexes>
        #indexes ( 64 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 54 ) , #loc ( 64 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        line |-> 64
        reversedString |-> 54
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        54 |-> #uninit
        55 |-> #uninit
        64 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 55
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 54 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 47 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 43 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 40 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
        SetItem ( #writev ( 62 , 63 ) )
        SetItem ( #writev ( 64 , 65 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 33 ) , #loc ( 43 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        line |-> 43
        reversedString |-> 33
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        33 |-> #uninit
        34 |-> #uninit
        43 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 34
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 33 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 26 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 52 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 49
        j |-> 51
        reversedString |-> 52
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        47 |-> #uninit
        49 |-> #rs ( copy , .Props )
        51 |-> #rs ( copy , .Props )
        52 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 47
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        i |-> 49
        j |-> 51
        reversedString |-> 52 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 44 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 51 , 56 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 52 , 58 ) )
      </write>
      <timer>
        59
      </timer>
      <indexes>
        #indexes ( 59 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        line |-> 59
        reversedString |-> 49
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 42 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 35 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 49 ) , #loc ( 59 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        line |-> 59
        reversedString |-> 49
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        49 |-> #uninit
        50 |-> #uninit
        59 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 50
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 49 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 42 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 59 , 60 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 44 ) , #loc ( 54 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        line |-> 54
        reversedString |-> 44
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        4 |-> #rs ( copy , .Props )
        5 |-> #uninit
        8 |-> #rs ( copy , .Props )
        10 |-> #rs ( .Props )
        44 |-> #uninit
        45 |-> #uninit
        54 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 45
        arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0
        reversedString |-> 44 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( arg1 |-> 4
        argc |-> 8
        argv1 |-> 5
        argv |-> 10
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 4
        argv1 |-> 5
        globalFalse |-> 2
        globalTrue |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFalse )
        ListItem ( globalTrue )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 3 ) )
        SetItem ( #writev ( 4 , 6 ) )
        SetItem ( #writev ( 5 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 37 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 49 , 50 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 54 , 55 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_10_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_10_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { globalTrue ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_10_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_10_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { globalFalse ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { globalTrue ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_10_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_10_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 42 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        37 |-> #uninit
        39 |-> #rs ( copy , .Props )
        41 |-> #rs ( copy , .Props )
        42 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 42 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 42 , 48 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 58 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        53 |-> #uninit
        55 |-> #rs ( copy , .Props )
        57 |-> #rs ( copy , .Props )
        58 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 53
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 55
        j |-> 57
        reversedString |-> 58 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 58 , 61 ) )
        SetItem ( #writev ( 58 , 63 ) )
        SetItem ( #writev ( 58 , 64 ) )
      </write>
      <timer>
        65
      </timer>
      <indexes>
        #indexes ( 65 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 37 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        32 |-> #uninit
        34 |-> #rs ( copy , .Props )
        36 |-> #rs ( copy , .Props )
        37 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 37 , 43 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 34 ) , #loc ( 44 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 44
        reversedString |-> 34
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 44 , 45 ) )
      </write>
      <timer>
        45
      </timer>
      <indexes>
        #indexes ( 45 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 53 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        48 |-> #uninit
        50 |-> #rs ( copy , .Props )
        52 |-> #rs ( copy , .Props )
        53 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 48
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 50
        j |-> 52
        reversedString |-> 53 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 53 , 56 ) )
        SetItem ( #writev ( 53 , 58 ) )
        SetItem ( #writev ( 53 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 50 ) , #loc ( 60 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 60
        reversedString |-> 50
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        50 |-> #uninit
        51 |-> #uninit
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 51
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 50 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 43 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 36 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 58 , 59 ) )
        SetItem ( #writev ( 60 , 61 ) )
      </write>
      <timer>
        61
      </timer>
      <indexes>
        #indexes ( 61 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 29 ) , #loc ( 39 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 39
        reversedString |-> 29
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
      </write>
      <timer>
        40
      </timer>
      <indexes>
        #indexes ( 40 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 48 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        43 |-> #uninit
        45 |-> #rs ( copy , .Props )
        47 |-> #rs ( copy , .Props )
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 38 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 31 , 34 ) )
        SetItem ( #writev ( 31 , 36 ) )
        SetItem ( #writev ( 31 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 45 ) , #loc ( 55 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 55
        reversedString |-> 45
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        45 |-> #uninit
        46 |-> #uninit
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 46
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 45 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 38 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
      </write>
      <timer>
        56
      </timer>
      <indexes>
        #indexes ( 56 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 40 ) , #loc ( 50 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 50
        reversedString |-> 40
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 33 ) )
        SetItem ( #writev ( 24 , 25 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_11_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_11_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call globalReturnsTrue ( .Exps ) ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_11_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_11_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      globalReturnsFalse
    </fname> , <funDef>
      <fname>
        globalReturnsFalse
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      globalReturnsTrue
    </fname> , <funDef>
      <fname>
        globalReturnsTrue
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call globalReturnsFalse ( .Exps ) ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call globalReturnsTrue ( .Exps ) ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_11_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_11_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 48 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        43 |-> #uninit
        45 |-> #rs ( copy , .Props )
        47 |-> #rs ( copy , .Props )
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 48 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        43 |-> #uninit
        45 |-> #rs ( copy , .Props )
        47 |-> #rs ( copy , .Props )
        48 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 43
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 45
        j |-> 47
        reversedString |-> 48 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 43 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 38
        aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 40
        j |-> 42
        reversedString |-> 43
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        35 |-> #uninit
        36 |-> #uninit
        38 |-> #uninit
        40 |-> #rs ( copy , .Props )
        42 |-> #rs ( copy , .Props )
        43 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 38
        aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 40
        j |-> 42
        reversedString |-> 43 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 35 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 43 , 49 ) )
      </write>
      <timer>
        50
      </timer>
      <indexes>
        #indexes ( 50 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 55 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
        SetItem ( #writev ( 56 , 57 ) )
        SetItem ( #writev ( 58 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        #TransferV ( #loc ( 40 ) , #loc ( 50 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 50
        reversedString |-> 40
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 43 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 38
        aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 40
        j |-> 42
        reversedString |-> 43
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        35 |-> #uninit
        36 |-> #uninit
        38 |-> #uninit
        40 |-> #rs ( copy , .Props )
        42 |-> #rs ( copy , .Props )
        43 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 38
        aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 40
        j |-> 42
        reversedString |-> 43 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 35 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 43 , 49 ) )
      </write>
      <timer>
        50
      </timer>
      <indexes>
        #indexes ( 50 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 55 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 45 , 50 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 48 , 51 ) )
        SetItem ( #writev ( 48 , 53 ) )
        SetItem ( #writev ( 48 , 54 ) )
        SetItem ( #writev ( 56 , 57 ) )
        SetItem ( #writev ( 58 , 59 ) )
      </write>
      <timer>
        60
      </timer>
      <indexes>
        #indexes ( 60 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 40 ) , #loc ( 50 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 50
        reversedString |-> 40
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        40 |-> #uninit
        41 |-> #uninit
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 41
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 40 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 50 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 43 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 35 ) , #loc ( 45 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 45
        reversedString |-> 35
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        35 |-> #uninit
        36 |-> #uninit
        45 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 35 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 50 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 50 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 40 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 43 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 43 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      12
    </index> , <state>
      <index>
        12
      </index>
      <k>
        #TransferV ( #loc ( 35 ) , #loc ( 45 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 45
        reversedString |-> 35
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        35 |-> #uninit
        36 |-> #uninit
        45 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 36
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 35 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      13
    </index> , <state>
      <index>
        13
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 50 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 51 , 52 ) )
        SetItem ( #writev ( 53 , 54 ) )
      </write>
      <timer>
        55
      </timer>
      <indexes>
        #indexes ( 55 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      14
    </index> , <state>
      <index>
        14
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 45 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
      </write>
      <timer>
        50
      </timer>
      <indexes>
        #indexes ( 50 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      15
    </index> , <state>
      <index>
        15
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 45 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
      </write>
      <timer>
        50
      </timer>
      <indexes>
        #indexes ( 50 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    16
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_12_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_12_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call globalReturnsTrueOrFalse ( .Exps ) ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_12_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_12_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      globalReturnsTrueOrFalse
    </fname> , <funDef>
      <fname>
        globalReturnsTrueOrFalse
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { decl a ;  transfer newResource ( copy , .Props ) a ;  decl b ;  transfer newResource ( copy , .Props ) b ;  b ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call globalReturnsTrueOrFalse ( .Exps ) ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_12_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_12_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 44 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 41
        j |-> 43
        reversedString |-> 44
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        39 |-> #uninit
        41 |-> #rs ( copy , .Props )
        43 |-> #rs ( copy , .Props )
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 41
        j |-> 43
        reversedString |-> 44 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 36 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 44 , 47 ) )
        SetItem ( #writev ( 44 , 49 ) )
        SetItem ( #writev ( 44 , 50 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 60 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 57
        j |-> 59
        reversedString |-> 60
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        52 |-> #uninit
        53 |-> #uninit
        55 |-> #uninit
        57 |-> #rs ( copy , .Props )
        59 |-> #rs ( copy , .Props )
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 57
        j |-> 59
        reversedString |-> 60 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 52 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 60 , 63 ) )
        SetItem ( #writev ( 60 , 65 ) )
        SetItem ( #writev ( 60 , 66 ) )
      </write>
      <timer>
        67
      </timer>
      <indexes>
        #indexes ( 67 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 39 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 36
        j |-> 38
        reversedString |-> 39
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        34 |-> #uninit
        36 |-> #rs ( copy , .Props )
        38 |-> #rs ( copy , .Props )
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 36
        j |-> 38
        reversedString |-> 39 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 31 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 39 , 45 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 36 ) , #loc ( 46 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 46
        reversedString |-> 36
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 36 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
      </write>
      <timer>
        47
      </timer>
      <indexes>
        #indexes ( 47 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 52
        j |-> 54
        reversedString |-> 55 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 52 ) , #loc ( 62 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 62
        reversedString |-> 52
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        52 |-> #uninit
        53 |-> #uninit
        62 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 52 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 62 , 63 ) )
      </write>
      <timer>
        63
      </timer>
      <indexes>
        #indexes ( 63 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 31 ) , #loc ( 41 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 41
        reversedString |-> 31
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 31 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
      </write>
      <timer>
        42
      </timer>
      <indexes>
        #indexes ( 42 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 50 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 47
        j |-> 49
        reversedString |-> 50
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        42 |-> #uninit
        43 |-> #uninit
        45 |-> #uninit
        47 |-> #rs ( copy , .Props )
        49 |-> #rs ( copy , .Props )
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        i |-> 47
        j |-> 49
        reversedString |-> 50 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 42 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 53 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 50 , 56 ) )
      </write>
      <timer>
        57
      </timer>
      <indexes>
        #indexes ( 57 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 47 ) , #loc ( 57 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 57
        reversedString |-> 47
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
      </write>
      <timer>
        58
      </timer>
      <indexes>
        #indexes ( 58 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 47 ) , #loc ( 57 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 57
        reversedString |-> 47
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
      </write>
      <timer>
        58
      </timer>
      <indexes>
        #indexes ( 58 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 42 ) , #loc ( 52 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        GLOBAL_CONST_FIVE |-> 0
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        line |-> 52
        reversedString |-> 42
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        42 |-> #uninit
        43 |-> #uninit
        52 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        reversedString |-> 42 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( GLOBAL_CONST_FIVE |-> 0
        arg1 |-> 2
        argv1 |-> 3 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( GLOBAL_CONST_FIVE )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
      </write>
      <timer>
        53
      </timer>
      <indexes>
        #indexes ( 53 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_13_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_13_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { GLOBAL_CONST_FIVE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_13_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_13_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { GLOBAL_CONST_FIVE ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { GLOBAL_CONST_FIVE ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_13_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_13_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 44 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 41
        j |-> 43
        reversedString |-> 44
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        39 |-> #uninit
        41 |-> #rs ( copy , .Props )
        43 |-> #rs ( copy , .Props )
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 39
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 41
        j |-> 43
        reversedString |-> 44 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 36 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 44 , 47 ) )
        SetItem ( #writev ( 44 , 49 ) )
        SetItem ( #writev ( 44 , 50 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 60 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 57
        j |-> 59
        reversedString |-> 60
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        52 |-> #uninit
        53 |-> #uninit
        55 |-> #uninit
        57 |-> #rs ( copy , .Props )
        59 |-> #rs ( copy , .Props )
        60 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 55
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 57
        j |-> 59
        reversedString |-> 60 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 52 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 57 , 62 ) )
        SetItem ( #writev ( 59 , 64 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 60 , 63 ) )
        SetItem ( #writev ( 60 , 65 ) )
        SetItem ( #writev ( 60 , 66 ) )
      </write>
      <timer>
        67
      </timer>
      <indexes>
        #indexes ( 67 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 39 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 36
        j |-> 38
        reversedString |-> 39
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        34 |-> #uninit
        36 |-> #rs ( copy , .Props )
        38 |-> #rs ( copy , .Props )
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 34
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 36
        j |-> 38
        reversedString |-> 39 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 31 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 39 , 45 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        #TransferV ( #loc ( 36 ) , #loc ( 46 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        line |-> 46
        reversedString |-> 36
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 37
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 36 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 29 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 21 , 26 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 22 , 25 ) )
        SetItem ( #writev ( 22 , 27 ) )
        SetItem ( #writev ( 22 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
      </write>
      <timer>
        47
      </timer>
      <indexes>
        #indexes ( 47 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 52
        j |-> 54
        reversedString |-> 55
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 52
        j |-> 54
        reversedString |-> 55 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 55 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 52
        j |-> 54
        reversedString |-> 55
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        50 |-> #uninit
        52 |-> #rs ( copy , .Props )
        54 |-> #rs ( copy , .Props )
        55 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 50
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 52
        j |-> 54
        reversedString |-> 55 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 52 , 57 ) )
        SetItem ( #writev ( 54 , 59 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 55 , 58 ) )
        SetItem ( #writev ( 55 , 60 ) )
        SetItem ( #writev ( 55 , 61 ) )
      </write>
      <timer>
        62
      </timer>
      <indexes>
        #indexes ( 62 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        #TransferV ( #loc ( 52 ) , #loc ( 62 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        line |-> 62
        reversedString |-> 52
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        52 |-> #uninit
        53 |-> #uninit
        62 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 53
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 52 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 45 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 35 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 38 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 38 , 44 ) )
        SetItem ( #writev ( 46 , 47 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 53 , 54 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
        SetItem ( #writev ( 60 , 61 ) )
        SetItem ( #writev ( 62 , 63 ) )
      </write>
      <timer>
        63
      </timer>
      <indexes>
        #indexes ( 63 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        #TransferV ( #loc ( 31 ) , #loc ( 41 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        line |-> 41
        reversedString |-> 31
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 32
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 31 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 24 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 22 , 23 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
      </write>
      <timer>
        42
      </timer>
      <indexes>
        #indexes ( 42 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        read ( #loc ( 50 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 47
        j |-> 49
        reversedString |-> 50
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        42 |-> #uninit
        43 |-> #uninit
        45 |-> #uninit
        47 |-> #rs ( copy , .Props )
        49 |-> #rs ( copy , .Props )
        50 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 45
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        i |-> 47
        j |-> 49
        reversedString |-> 50 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 42 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 47 , 52 ) )
        SetItem ( #writev ( 49 , 54 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 50 , 53 ) )
        SetItem ( #writev ( 50 , 55 ) )
        SetItem ( #writev ( 50 , 56 ) )
      </write>
      <timer>
        57
      </timer>
      <indexes>
        #indexes ( 57 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        #TransferV ( #loc ( 47 ) , #loc ( 57 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        line |-> 57
        reversedString |-> 47
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 40 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 30 , 35 ) )
        SetItem ( #writev ( 32 , 37 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 33 , 36 ) )
        SetItem ( #writev ( 33 , 38 ) )
        SetItem ( #writev ( 33 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
      </write>
      <timer>
        58
      </timer>
      <indexes>
        #indexes ( 58 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 47 ) , #loc ( 57 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        line |-> 57
        reversedString |-> 47
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        47 |-> #uninit
        48 |-> #uninit
        57 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 48
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 47 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 27 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 19 , 24 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 20 , 23 ) )
        SetItem ( #writev ( 20 , 25 ) )
        SetItem ( #writev ( 20 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 40 ) )
        SetItem ( #writev ( 31 , 32 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 48 , 49 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
        SetItem ( #writev ( 55 , 56 ) )
        SetItem ( #writev ( 57 , 58 ) )
      </write>
      <timer>
        58
      </timer>
      <indexes>
        #indexes ( 58 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        #TransferV ( #loc ( 42 ) , #loc ( 52 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        line |-> 52
        reversedString |-> 42
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        2 |-> #rs ( copy , .Props )
        3 |-> #uninit
        6 |-> #rs ( copy , .Props )
        8 |-> #rs ( .Props )
        42 |-> #uninit
        43 |-> #uninit
        52 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 43
        arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0
        reversedString |-> 42 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( arg1 |-> 2
        argc |-> 6
        argv1 |-> 3
        argv |-> 8
        globalFive |-> 0 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 2
        argv1 |-> 3
        globalFive |-> 0 )
        ListItem ( argv1 )
        ListItem ( arg1 )
        ListItem ( globalFive )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 1 ) )
        SetItem ( #writev ( 2 , 4 ) )
        SetItem ( #writev ( 3 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 22 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 17 , 18 ) )
        SetItem ( #writev ( 20 , 21 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 35 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 33 , 34 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 38 , 39 ) )
        SetItem ( #writev ( 40 , 41 ) )
        SetItem ( #writev ( 43 , 44 ) )
        SetItem ( #writev ( 45 , 46 ) )
        SetItem ( #writev ( 47 , 48 ) )
        SetItem ( #writev ( 50 , 51 ) )
        SetItem ( #writev ( 52 , 53 ) )
      </write>
      <timer>
        53
      </timer>
      <indexes>
        #indexes ( 53 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    12
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_14_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_14_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { globalFive ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_14_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_14_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { globalFive ;  @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { globalFive ;  @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_14_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_14_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>
<T>
  <states>
    StateCellMapItem ( <index>
      0
    </index> , <state>
      <index>
        0
      </index>
      <k>
        read ( #loc ( 28 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 23
        aString |-> 21
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 25
        j |-> 27
        reversedString |-> 28
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
        21 |-> #uninit
        23 |-> #uninit
        25 |-> #rs ( copy , .Props )
        27 |-> #rs ( copy , .Props )
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 23
        aString |-> 21
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 25
        j |-> 27
        reversedString |-> 28 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 21
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 20 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 25 , 30 ) )
        SetItem ( #writev ( 27 , 32 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 28 , 31 ) )
        SetItem ( #writev ( 28 , 33 ) )
        SetItem ( #writev ( 28 , 34 ) )
      </write>
      <timer>
        35
      </timer>
      <indexes>
        #indexes ( 35 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      1
    </index> , <state>
      <index>
        1
      </index>
      <k>
        read ( #loc ( 44 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 39
        aString |-> 37
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 41
        j |-> 43
        reversedString |-> 44
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        39 |-> #uninit
        41 |-> #rs ( copy , .Props )
        43 |-> #rs ( copy , .Props )
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 39
        aString |-> 37
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 41
        j |-> 43
        reversedString |-> 44 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 37
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 36 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 43 , 48 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 44 , 47 ) )
        SetItem ( #writev ( 44 , 49 ) )
        SetItem ( #writev ( 44 , 50 ) )
      </write>
      <timer>
        51
      </timer>
      <indexes>
        #indexes ( 51 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      2
    </index> , <state>
      <index>
        2
      </index>
      <k>
        read ( #loc ( 26 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 21
        aString |-> 19
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 23
        j |-> 25
        reversedString |-> 26
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        18 |-> #uninit
        19 |-> #uninit
        21 |-> #uninit
        23 |-> #rs ( copy , .Props )
        25 |-> #rs ( copy , .Props )
        26 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 21
        aString |-> 19
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 23
        j |-> 25
        reversedString |-> 26 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 19
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 18 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 23 , 28 ) )
        SetItem ( #writev ( 25 , 30 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 26 , 29 ) )
        SetItem ( #writev ( 26 , 31 ) )
        SetItem ( #writev ( 26 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      3
    </index> , <state>
      <index>
        3
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 20 , 21 ) )
      </write>
      <timer>
        22
      </timer>
      <indexes>
        #indexes ( 22 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      4
    </index> , <state>
      <index>
        4
      </index>
      <k>
        #TransferV ( #loc ( 20 ) , #loc ( 30 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 21
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 30
        reversedString |-> 20
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        20 |-> #uninit
        21 |-> #uninit
        30 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 21
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 20 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      5
    </index> , <state>
      <index>
        5
      </index>
      <k>
        read ( #loc ( 39 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 34
        aString |-> 32
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 36
        j |-> 38
        reversedString |-> 39
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        34 |-> #uninit
        36 |-> #rs ( copy , .Props )
        38 |-> #rs ( copy , .Props )
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 34
        aString |-> 32
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 36
        j |-> 38
        reversedString |-> 39 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 32
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 31 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 38 , 43 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 42 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 39 , 45 ) )
      </write>
      <timer>
        46
      </timer>
      <indexes>
        #indexes ( 46 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      6
    </index> , <state>
      <index>
        6
      </index>
      <k>
        read ( #loc ( 42 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        37 |-> #uninit
        39 |-> #rs ( copy , .Props )
        41 |-> #rs ( copy , .Props )
        42 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 37
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 39
        j |-> 41
        reversedString |-> 42 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 39 , 44 ) )
        SetItem ( #writev ( 41 , 46 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 42 , 45 ) )
        SetItem ( #writev ( 42 , 47 ) )
        SetItem ( #writev ( 42 , 48 ) )
      </write>
      <timer>
        49
      </timer>
      <indexes>
        #indexes ( 49 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      7
    </index> , <state>
      <index>
        7
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
      </write>
      <timer>
        38
      </timer>
      <indexes>
        #indexes ( 38 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      8
    </index> , <state>
      <index>
        8
      </index>
      <k>
        #TransferV ( #loc ( 36 ) , #loc ( 46 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 37
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 46
        reversedString |-> 36
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        36 |-> #uninit
        37 |-> #uninit
        46 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 37
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 36 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
        SetItem ( #writev ( 44 , 45 ) )
        SetItem ( #writev ( 46 , 47 ) )
      </write>
      <timer>
        47
      </timer>
      <indexes>
        #indexes ( 47 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      9
    </index> , <state>
      <index>
        9
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 18 , 19 ) )
      </write>
      <timer>
        20
      </timer>
      <indexes>
        #indexes ( 20 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      10
    </index> , <state>
      <index>
        10
      </index>
      <k>
        #TransferV ( #loc ( 18 ) , #loc ( 28 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 19
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 28
        reversedString |-> 18
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        18 |-> #uninit
        19 |-> #uninit
        28 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 19
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 18 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 11 ) )
        SetItem ( #writev ( 12 , 13 ) )
        SetItem ( #writev ( 14 , 15 ) )
        SetItem ( #writev ( 16 , 17 ) )
        SetItem ( #writev ( 19 , 20 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
      </write>
      <timer>
        29
      </timer>
      <indexes>
        #indexes ( 29 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      11
    </index> , <state>
      <index>
        11
      </index>
      <k>
        read ( #loc ( 37 ) ) ~> #freezer#expStmt0_ ( ) ~> val ( newResource ( .Props ) )  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( reversedString , .Exps ) ;  .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        32 |-> #uninit
        34 |-> #rs ( copy , .Props )
        36 |-> #rs ( copy , .Props )
        37 |-> #uninit
      </store>
      <stack>
        ListItem ( aString1 |-> 32
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        i |-> 34
        j |-> 36
        reversedString |-> 37 )
        ListItem ( reversedString )
        ListItem ( j )
        ListItem ( i )
        ListItem ( aString1 )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 34 , 39 ) )
        SetItem ( #writev ( 36 , 41 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 37 , 40 ) )
        SetItem ( #writev ( 37 , 42 ) )
        SetItem ( #writev ( 37 , 43 ) )
      </write>
      <timer>
        44
      </timer>
      <indexes>
        #indexes ( 44 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      12
    </index> , <state>
      <index>
        12
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 31 , 32 ) )
      </write>
      <timer>
        33
      </timer>
      <indexes>
        #indexes ( 33 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      13
    </index> , <state>
      <index>
        13
      </index>
      <k>
        #TransferV ( #loc ( 31 ) , #loc ( 41 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 32
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 41
        reversedString |-> 31
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        31 |-> #uninit
        32 |-> #uninit
        41 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 32
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 31 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 36 , 37 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 41 , 42 ) )
      </write>
      <timer>
        42
      </timer>
      <indexes>
        #indexes ( 42 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      14
    </index> , <state>
      <index>
        14
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
      </write>
      <timer>
        36
      </timer>
      <indexes>
        #indexes ( 36 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      15
    </index> , <state>
      <index>
        15
      </index>
      <k>
        #TransferV ( #loc ( 34 ) , #loc ( 44 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 44
        reversedString |-> 34
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        34 |-> #uninit
        35 |-> #uninit
        44 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 35
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 34 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 25 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 15 , 20 ) )
        SetItem ( #writev ( 17 , 22 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 18 , 21 ) )
        SetItem ( #writev ( 18 , 23 ) )
        SetItem ( #writev ( 18 , 24 ) )
        SetItem ( #writev ( 26 , 27 ) )
        SetItem ( #writev ( 28 , 29 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 35 , 36 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
        SetItem ( #writev ( 42 , 43 ) )
        SetItem ( #writev ( 44 , 45 ) )
      </write>
      <timer>
        45
      </timer>
      <indexes>
        #indexes ( 45 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      16
    </index> , <state>
      <index>
        16
      </index>
      <k>
        .
      </k>
      <env>
        arg1 |-> 0
        argv1 |-> 1
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
      </store>
      <stack>
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 29 , 30 ) )
      </write>
      <timer>
        31
      </timer>
      <indexes>
        #indexes ( 31 , 0 )
      </indexes>
    </state> ) StateCellMapItem ( <index>
      17
    </index> , <state>
      <index>
        17
      </index>
      <k>
        #TransferV ( #loc ( 29 ) , #loc ( 39 ) ) ~> #increaseIndex ~> #increaseTimer ~> line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts ~> #blockend ~> #void ~> #freezer#expStmt0_ ( ) ~> .Stmts
      </k>
      <env>
        aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        line |-> 39
        reversedString |-> 29
      </env>
      <store>
        0 |-> #rs ( copy , .Props )
        1 |-> #uninit
        4 |-> #rs ( copy , .Props )
        6 |-> #rs ( .Props )
        29 |-> #uninit
        30 |-> #uninit
        39 |-> #uninit
      </store>
      <stack>
        ListItem ( line )
        ListItem ( aString |-> 30
        arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6
        reversedString |-> 29 )
        ListItem ( aString )
        ListItem ( reversedString )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( arg1 |-> 0
        argc |-> 4
        argv1 |-> 1
        argv |-> 6 )
        ListItem ( argv )
        ListItem ( argc )
        ListItem ( arg1 |-> 0
        argv1 |-> 1 )
        ListItem ( argv1 )
        ListItem ( arg1 )
      </stack>
      <write>
        SetItem ( #writev ( 0 , 2 ) )
        SetItem ( #writev ( 1 , 3 ) )
        SetItem ( #writev ( 4 , 5 ) )
        SetItem ( #writev ( 6 , 7 ) )
        SetItem ( #writev ( 8 , 9 ) )
        SetItem ( #writev ( 10 , 20 ) )
        SetItem ( #writev ( 11 , 12 ) )
        SetItem ( #writev ( 13 , 14 ) )
        SetItem ( #writev ( 15 , 16 ) )
        SetItem ( #writev ( 18 , 19 ) )
        SetItem ( #writev ( 21 , 22 ) )
        SetItem ( #writev ( 23 , 24 ) )
        SetItem ( #writev ( 25 , 26 ) )
        SetItem ( #writev ( 27 , 28 ) )
        SetItem ( #writev ( 30 , 31 ) )
        SetItem ( #writev ( 32 , 33 ) )
        SetItem ( #writev ( 34 , 35 ) )
        SetItem ( #writev ( 37 , 38 ) )
        SetItem ( #writev ( 39 , 40 ) )
      </write>
      <timer>
        40
      </timer>
      <indexes>
        #indexes ( 40 , 0 )
      </indexes>
    </state> )
  </states>
  <nstate>
    18
  </nstate>
  <tmp>
    .List
  </tmp>
  <funDefs>
    FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_15_bad
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_15_bad
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperBad ( aString , .Exps ) ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      CWE416_Use_After_Free__return_freed_ptr_15_good
    </fname> , <funDef>
      <fname>
        CWE416_Use_After_Free__return_freed_ptr_15_good
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { call good1 ( .Exps ) ;  call good2 ( .Exps ) ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good1
    </fname> , <funDef>
      <fname>
        good1
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , { { decl reversedString ;  decl aString ;  transfer newResource ( .Props ) aString ;  call helperGood ( aString , .Exps ) ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      good2
    </fname> , <funDef>
      <fname>
        good2
      </fname>
      <fparams>
        .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { @ { { decl reversedString ;  transfer newResource ( .Props ) reversedString ;  call printLine ( reversedString , .Exps ) ;  .Stmts }  .Stmts } , { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperBad
    </fname> , <funDef>
      <fname>
        helperBad
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  deallocate reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      helperGood
    </fname> , <funDef>
      <fname>
        helperGood
      </fname>
      <fparams>
        aString1 : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( .Props )
      </fret>
      <fbody>
        { decl i ;  transfer newResource ( copy , .Props ) i ;  decl j ;  decl reversedString ;  transfer #uninit reversedString ;  aString1 ;  @ { aString1 ;  transfer newResource ( copy , .Props ) i ;  transfer newResource ( .Props ) reversedString ;  transfer newResource ( copy , .Props ) j ;  transfer aString1 reversedString ;  transfer newResource ( .Props ) reversedString ;  reversedString ;  val ( newResource ( .Props ) )  .Stmts } , { .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      main
    </fname> , <funDef>
      <fname>
        main
      </fname>
      <fparams>
        argc : #own ( copy , .Props ) , argv : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #own ( copy , .Props )
      </fret>
      <fbody>
        { call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_15_good ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  call CWE416_Use_After_Free__return_freed_ptr_15_bad ( .Exps ) ;  call printLine ( newResource ( copy , .Props ) , .Exps ) ;  val ( newResource ( copy , .Props ) )  .Stmts }
      </fbody>
    </funDef> ) FunDefCellMapItem ( <fname>
      printLine
    </fname> , <funDef>
      <fname>
        printLine
      </fname>
      <fparams>
        line : #own ( .Props ) , .Parameters
      </fparams>
      <fret>
        #voidTy
      </fret>
      <fbody>
        { line ;  @ { line ;  .Stmts } , .Blocks ;  .Stmts }
      </fbody>
    </funDef> )
  </funDefs>
</T>


real	0m45.251s
user	0m14.016s
sys	0m7.244s

real	1m32.512s
user	0m22.631s
sys	0m7.588s

real	1m32.098s
user	0m22.748s
sys	0m7.694s

real	2m1.253s
user	0m23.851s
sys	0m9.568s

real	1m54.107s
user	0m22.996s
sys	0m8.543s

real	1m31.491s
user	0m24.694s
sys	0m8.253s

real	1m48.020s
user	0m23.995s
sys	0m8.526s

real	1m43.053s
user	0m24.382s
sys	0m9.257s

real	1m47.294s
user	0m24.073s
sys	0m8.326s

real	1m40.941s
user	0m22.806s
sys	0m7.805s

real	1m28.663s
user	0m21.297s
sys	0m7.389s

real	1m29.258s
user	0m25.049s
sys	0m7.581s

real	1m50.180s
user	0m23.000s
sys	0m9.595s

real	1m53.966s
user	0m25.121s
sys	0m9.999s

real	1m41.928s
user	0m24.730s
sys	0m8.002s

real	24m40.162s
user	5m45.393s
sys	2m5.385s
